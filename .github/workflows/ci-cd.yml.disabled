name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [created]

jobs:
  test:
    name: Test with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']
        exclude:
          # Skip Python 3.8 on Windows due to VirtualBox compatibility
          - os: windows-latest
            python-version: '3.8'

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Verify test setup
      run: |
        python -c "import pytest; print('pytest version:', pytest.__version__)"
        python -c "import virtualization-mcp; print('virtualization-mcp imported successfully')"
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v --cov=virtualization-mcp --cov-report=xml
    
    - name: Upload coverage to Codecov
      if: github.event_name == 'push' && matrix.python-version == '3.11' && matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build-dxt:
    name: Build DXT Package
    needs: test
    if: github.event_name == 'push' || github.event_name == 'release'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        npm install -g @anthropic-ai/mcpb
    
    - name: Build MCPB package
      run: |
        mcpb pack mcpb/ dist/virtualization-mcp-v1.0.0.mcpb
    
    - name: Upload MCPB package
      uses: actions/upload-artifact@v4
      with:
        name: virtualization-mcp-mcpb-package
        path: dist/*.mcpb
    
    - name: Create GitHub Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*.mcpb
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



